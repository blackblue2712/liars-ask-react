{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nclass PrivateRouteAdmin extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      open: false\n    };\n  }\n\n  async componentDidMount() {\n    let check = await isAdmin(isAuthenticated().token);\n\n    if (check === \"admin\") {\n      this.setState({\n        open: true\n      });\n    } else {\n      this.props.history.push(\"/404\");\n    }\n  }\n\n  render() {\n    let open = this.state.open;\n    return open === true && React.createElement(Route, Object.assign({}, this.rest, {\n      render: props => React.createElement(Component, Object.assign({}, props, {\n        userPayload: isAuthenticated(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js"],"names":["React","Route","Redirect","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","constructor","state","open","componentDidMount","check","token","setState","props","history","push","render","rest"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AACD,QAAMC,iBAAN,GAA2B;AACvB,QAAIC,KAAK,GAAG,MAAMP,OAAO,CAACD,eAAe,GAAGS,KAAnB,CAAzB;;AACA,QAAGD,KAAK,KAAK,OAAb,EAAsB;AAClB,WAAKE,QAAL,CAAe;AAACJ,QAAAA,IAAI,EAAE;AAAP,OAAf;AACH,KAFD,MAEO;AACH,WAAKK,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,MAAxB;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAAA,QACCR,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEL,WACIA,IAAI,KAAK,IAAT,IACA,oBAAC,KAAD,oBACQ,KAAKS,IADb;AAEI,MAAA,MAAM,EAAKJ,KAAK,IACZ,oBAAC,SAAD,oBAAeA,KAAf;AAAsB,QAAA,WAAW,EAAEX,eAAe,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AASH;;AA3B2C;;AAgChD,eAAeE,iBAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nclass PrivateRouteAdmin extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            open: false\n        }\n    }\n    async componentDidMount () {\n        let check = await isAdmin(isAuthenticated().token);\n        if(check === \"admin\") {\n            this.setState( {open: true} );\n        } else {\n            this.props.history.push(\"/404\");\n        }\n    }\n\n    render() {\n        let { open } = this.state;\n        return (\n            open === true &&\n            <Route\n                {...this.rest}\n                render = { props =>\n                    <Component {...props} userPayload={isAuthenticated()} />\n                }\n            />\n        )\n    }\n}\n\n\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}
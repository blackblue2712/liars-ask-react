{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/client/announcements/AddAnnouncement.js\";\nimport React, { useEffect, useState } from 'react';\nimport Mde from '../editor/Mde';\nimport Tags from '../components/Tags';\nimport { postAnnouncement } from '../../controllers/announcementController';\nimport { isAuthenticated } from '../../controllers/userController';\nimport Notify from '../components/Notify';\n\nconst AddAnnouncements = props => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        tagDom = _useState2[0],\n        setTagDom = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showNotify = _useState4[0],\n        setShowNotify = _useState4[1];\n\n  useEffect(() => {\n    let editor = document.querySelector(\"textarea.mde-text \");\n    editor.setAttribute(\"id\", \"announ-content\");\n    editor.setAttribute(\"name\", \"announ-content\");\n    let tagsIncludedSize = document.querySelector(\".tags-included\").offsetWidth;\n    document.querySelector(\"#tageditor-replacing-tagnames--input\").style.paddingLeft = tagsIncludedSize + 10 + \"px\";\n    document.querySelector(\"#tageditor-replacing-tagnames--input\").addEventListener(\"keyup\", handleChangeTag, false);\n    return () => {\n      document.querySelector(\"#tageditor-replacing-tagnames--input\").removeEventListener(\"keyup\", handleChangeTag, false);\n    };\n  });\n\n  const handlePostAcm = () => {\n    let id = isAuthenticated().user._id;\n\n    let name = isAuthenticated().user.fullname || isAuthenticated().user.email;\n    let token = isAuthenticated().token;\n    let editor = document.querySelector(\"textarea.mde-text \");\n    let body = \"\";\n\n    if (editor) {\n      body = editor.value;\n      let title = document.getElementById(\"title\").value;\n      let isImportant = document.getElementById(\"is-important\").checked; // tags\n\n      let tagsname = document.getElementById(\"tagsname\").value;\n      let tagsnameArray = tagsname.split(\" \");\n      tagsnameArray = tagsnameArray.filter(t => t !== \"\");\n\n      if (title && body) {\n        postAnnouncement({\n          title,\n          body,\n          isImportant,\n          tagsnameArray,\n          id,\n          name\n        }, token).then(res => {\n          setShowNotify(res.message);\n        });\n      }\n    } else {\n      alert(\"Please turn to write mode\");\n    }\n  }; // close tag\n\n\n  const closeTag = text => {\n    let tagsname = document.getElementById(\"tagsname\");\n    let tagsnameArray = tagsname.value.split(\" \").filter(t => t !== text);\n    tagsname.value = tagsnameArray.join(\" \");\n    setTagDom(tagsname.value);\n  };\n\n  const handleChangeTag = e => {\n    if (e.keyCode === 32) {\n      let tagsname = document.getElementById(\"tagsname\");\n      let tagreplace = document.getElementById(\"tageditor-replacing-tagnames--input\");\n      tagsname.value = tagsname.value + e.target.value;\n      setTagDom(tagsname.value);\n      tagreplace.value = \"\";\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"main-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Notify, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), showNotify !== \"\" && React.createElement(Notify, {\n    class: \"on\",\n    text: showNotify,\n    clearMess: setShowNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"grid d-flex align-items-centers mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"fs-headline1 mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"New announcement\"))), React.createElement(\"div\", {\n    id: \"mainbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"announ-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"bg-white bar-sm bs-md p16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"post-title ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"title\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Title\", React.createElement(\"p\", {\n    className: \"s-desscription mt4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"A programming language or whatever \"))), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"title\",\n    name: \"title\",\n    type: \"text\",\n    className: \"s-input w-100\",\n    placeholder: \"Enter title here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"post-editor mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"ps-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"announ-content\",\n    className: \"s-label mb16 d-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Body\", React.createElement(\"p\", {\n    className: \"s-desscription mt4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, \"Announcement body (all of the information about the announcement)\")), React.createElement(Mde, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"d-flex align-items-center pb12 fc-light fs-caption mt16 mb24\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"mr16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"``` \", React.createElement(\"code\", {\n    className: \"ba bc-black-9 px4 py2 bar-sm bg-black-050 fc-black-800 ff-mono\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"code\"), \" ```\"), React.createElement(\"div\", {\n    className: \"mr16 fw-bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"**bold**\"), React.createElement(\"div\", {\n    className: \"mr16 fs-italic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"*italic*\"), React.createElement(\"div\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \">quote\")), React.createElement(\"div\", {\n    className: \"ps-relative pt24\",\n    id: \"tag-editor\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"tagsname\",\n    className: \"s-label mb16 d-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Tags\", React.createElement(\"p\", {\n    className: \"s-desscription mt4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Add tags to describe what your announcement is about\")), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"tagsname\",\n    name: \"tagsname\",\n    type: \"text\",\n    className: \"s-input w-100 d-none\",\n    placeholder: \"e.g. (javascript xml react)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"tags-editor ps-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"tags-included ps-absolute\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, tagDom.split(\" \").map((tag, index) => {\n    console.log(tag);\n    return tag !== \"\" && React.createElement(Tags, {\n      key: index,\n      id: \"data-\" + tag,\n      closeTag: () => closeTag(tag),\n      name: tag,\n      close: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    });\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    className: \"s-input w-100\",\n    placeholder: \"e.g. (javascript xml react)\",\n    id: \"tageditor-replacing-tagnames--input\",\n    onChange: e => handleChangeTag(e.target.value, e.keyCode),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  })))))), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"is-important\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Is important\", React.createElement(\"p\", {\n    className: \"s-desscription mt4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, \"Is this announcement important? Check it\"))), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"is-important\",\n    name: \"is-important\",\n    type: \"checkbox\",\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    className: \"s-btn s-btn__outline s-btn__primary mt24\",\n    onClick: handlePostAcm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }, \"Post this\")))));\n};\n\nexport default AddAnnouncements;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/client/announcements/AddAnnouncement.js"],"names":["React","useEffect","useState","Mde","Tags","postAnnouncement","isAuthenticated","Notify","AddAnnouncements","props","tagDom","setTagDom","showNotify","setShowNotify","editor","document","querySelector","setAttribute","tagsIncludedSize","offsetWidth","style","paddingLeft","addEventListener","handleChangeTag","removeEventListener","handlePostAcm","id","user","_id","name","fullname","email","token","body","value","title","getElementById","isImportant","checked","tagsname","tagsnameArray","split","filter","t","then","res","message","alert","closeTag","text","join","e","keyCode","tagreplace","target","map","tag","index","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Mde from '../editor/Mde';\nimport Tags from '../components/Tags' ;\nimport { postAnnouncement } from '../../controllers/announcementController';\nimport { isAuthenticated } from '../../controllers/userController';\nimport Notify from '../components/Notify';\n\n\nconst AddAnnouncements = props => {\n    const [tagDom, setTagDom] = useState(\"\");\n    const [showNotify, setShowNotify] = useState(\"\");\n    \n    useEffect( () => {\n        let editor = document.querySelector(\"textarea.mde-text \");\n        editor.setAttribute(\"id\", \"announ-content\")\n        editor.setAttribute(\"name\", \"announ-content\")\n\n        let tagsIncludedSize = document.querySelector(\".tags-included\").offsetWidth;\n        document.querySelector(\"#tageditor-replacing-tagnames--input\").style.paddingLeft = tagsIncludedSize + 10 + \"px\";\n\n        document.querySelector(\"#tageditor-replacing-tagnames--input\").addEventListener(\"keyup\", handleChangeTag, false);\n        return () => {\n            document.querySelector(\"#tageditor-replacing-tagnames--input\").removeEventListener(\"keyup\", handleChangeTag, false);\n        }\n        \n    });\n\n    const handlePostAcm =  () => {\n        let id = isAuthenticated().user._id;\n        let name = isAuthenticated().user.fullname || isAuthenticated().user.email;\n        let token = isAuthenticated().token;\n        let editor = document.querySelector(\"textarea.mde-text \");\n        let body = \"\";\n        if(editor) {\n            body = editor.value;\n            let title = document.getElementById(\"title\").value;\n            let isImportant = document.getElementById(\"is-important\").checked;\n            // tags\n            let tagsname = document.getElementById(\"tagsname\").value;\n            let tagsnameArray = tagsname.split(\" \")\n            tagsnameArray = tagsnameArray.filter( t => t !== \"\");\n\n            if(title && body) {\n                postAnnouncement({title, body, isImportant, tagsnameArray, id, name}, token)\n                .then( res => {\n                    setShowNotify(res.message);\n                })\n            }\n        } else {\n            alert(\"Please turn to write mode\")\n        }\n    }\n\n    // close tag\n    const closeTag = (text) => {\n        let tagsname = document.getElementById(\"tagsname\");\n        let tagsnameArray = tagsname.value.split(\" \").filter( t => t !== text);\n        tagsname.value = tagsnameArray.join(\" \");\n        setTagDom(tagsname.value);\n    }\n\n    const handleChangeTag = (e) => {\n        \n        if(e.keyCode === 32) {\n            let tagsname = document.getElementById(\"tagsname\");\n            let tagreplace = document.getElementById(\"tageditor-replacing-tagnames--input\")\n            tagsname.value = tagsname.value + e.target.value;\n            setTagDom(tagsname.value);\n            tagreplace.value = \"\";\n\n            \n        }\n    }\n\n    return (\n        <>\n            <div className=\"main-head\">\n                <Notify />  \n                {showNotify !== \"\" &&  <Notify class=\"on\" text={showNotify} clearMess={setShowNotify} />}\n                <div className=\"grid d-flex align-items-centers mb16\">\n                    <h1 className=\"fs-headline1 mr-auto\">New announcement</h1>\n                    {/* <Link to=\"/admin/tags/new\" className=\"s-btn s-btn__outline s-btn__primary\">Add new tag</Link> */}\n                </div>\n                {/* <p className=\"mb24 f13 fw350\">A tag is a keyword or label that categorizes your question with other, similar questions. Using the right tags makes it easier for others to find and answer your question.</p> */}\n            </div>\n\n            <div id=\"mainbar\">\n                <div id=\"announ-form\">\n                    <div className=\"bg-white bar-sm bs-md p16\">\n                        <div className=\"post-title ps-relative mb16\">\n                            <label htmlFor=\"title\" className=\"s-label mb4\">\n                                Title\n                                <p className=\"s-desscription mt4\">A programming language or whatever </p>\n                            </label>\n                        </div>\n                        <div className=\"ps-relative mb16\">\n                            <input id=\"title\" name=\"title\" type=\"text\" className=\"s-input w-100\" placeholder=\"Enter title here\"/>\n                        </div>\n                        \n                        <div className=\"post-editor mb16\">\n                            <div className=\"ps-relative\">\n                                <label htmlFor=\"announ-content\" className=\"s-label mb16 d-block\">\n                                    Body\n                                    <p className=\"s-desscription mt4\">Announcement body (all of the information about the announcement)</p>\n                                </label>\n                                <Mde />\n                                {/* CAPTOPN */}\n                                <div className=\"d-flex align-items-center pb12 fc-light fs-caption mt16 mb24\">\n                                    <div className=\"mr16\">\n                                        ``` <code className=\"ba bc-black-9 px4 py2 bar-sm bg-black-050 fc-black-800 ff-mono\">code</code> ```\n                                    </div>\n                                    <div className=\"mr16 fw-bold\">\n                                        **bold**\n                                    </div>\n                                    <div className=\"mr16 fs-italic\">\n                                        *italic*\n                                    </div>\n                                    <div className=\"\">\n                                        &gt;quote\n                                    </div>\n                                </div>\n                                {/* TAGS EDITOR */}\n                                <div className=\"ps-relative pt24\" id=\"tag-editor\">\n                                    <label htmlFor=\"tagsname\" className=\"s-label mb16 d-block\">\n                                        Tags\n                                        <p className=\"s-desscription mt4\">Add tags to describe what your announcement is about</p>\n                                    </label>\n                                    <div className=\"ps-relative mb16\">\n                                        <input \n                                            id=\"tagsname\" name=\"tagsname\" type=\"text\" className=\"s-input w-100 d-none\" placeholder=\"e.g. (javascript xml react)\"    \n                                        />\n                                        <div className=\"tags-editor ps-relative\" >\n                                            <span className=\"tags-included ps-absolute\">\n                                                \n                                                {\n                                                    tagDom.split(\" \").map( (tag, index) => {\n                                                        console.log(tag);\n                                                        return tag !== \"\" && <Tags key={index} id={\"data-\" + tag} closeTag={() => closeTag(tag)} name={tag} close={true}/>\n                                                    })\n                                                }\n                                            </span>\n                                        <input\n                                            type=\"text\" className=\"s-input w-100\" placeholder=\"e.g. (javascript xml react)\"\n                                            id=\"tageditor-replacing-tagnames--input\"\n                                            onChange={(e) => handleChangeTag(e.target.value, e.keyCode)}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"post-title ps-relative mb16\">\n                            <label htmlFor=\"is-important\" className=\"s-label mb4\">\n                                Is important\n                                <p className=\"s-desscription mt4\">Is this announcement important? Check it</p>\n                            </label>\n                        </div>\n                        <div className=\"ps-relative mb16\">\n                            <input id=\"is-important\" name=\"is-important\" type=\"checkbox\" className=\"\" />\n                        </div>\n\n                        <button\n                            className=\"s-btn s-btn__outline s-btn__primary mt24\"\n                            onClick={handlePostAcm}\n                        >Post this</button>\n                    </div>\n                </div>\n            </div>\n            {/* <div className=\"clear-fix\"></div> */}\n        </>\n    )\n}\n\nexport default AddAnnouncements;"]},"metadata":{},"sourceType":"module"}
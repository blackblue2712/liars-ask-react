{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/client/users/ViewUserDetailStory.js\";\nimport React, { useState, useEffect } from 'react';\nimport Mde from '../editor/Mde';\nimport { putUpdateStory } from '../../controllers/userController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Notify from '../components/Notify';\n\nconst UserDetailStory = props => {\n  const _props$userPayload = props.userPayload,\n        quotes = _props$userPayload.quotes,\n        bio = _props$userPayload.bio,\n        _id = _props$userPayload._id,\n        fullname = _props$userPayload.fullname;\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        showNotify = _useState2[0],\n        setShowNotify = _useState2[1];\n\n  useEffect(() => {\n    let editor = document.querySelector(\"textarea.mde-text\");\n    editor.setAttribute(\"id\", \"bio\");\n    editor.setAttribute(\"name\", \"bio\");\n  }, [props.userPayload.email]);\n  return React.createElement(\"div\", {\n    className: \"bio bs-md p20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, showNotify !== \"\" && React.createElement(Notify, {\n    class: \"on\",\n    text: showNotify,\n    clearMess: setShowNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"quotes\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, fullname, \" quotes\")), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"quotes\",\n    name: \"quotes\",\n    type: \"text\",\n    className: \"s-input w-100\",\n    value: quotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Bio\")), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(ReactMarkdown, {\n    source: bio,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Mde, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wrap-btn-loading2\",\n    className: \"ps-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"s-btn btn-sm btn-outlined colorGreen\",\n    onClick: handleChangeStory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nexport default UserDetailStory;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/client/users/ViewUserDetailStory.js"],"names":["React","useState","useEffect","Mde","putUpdateStory","ReactMarkdown","CodeBlock","Notify","UserDetailStory","props","userPayload","quotes","bio","_id","fullname","showNotify","setShowNotify","editor","document","querySelector","setAttribute","email","code","handleChangeStory"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Mde from '../editor/Mde';\nimport { putUpdateStory } from '../../controllers/userController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Notify from '../components/Notify';\n\nconst UserDetailStory = (props) => {\n\n    const { quotes, bio, _id, fullname } = props.userPayload;\n    const [showNotify, setShowNotify] = useState(\"\");\n\n\n    useEffect( () => {\n        let editor = document.querySelector(\"textarea.mde-text\");\n        editor.setAttribute(\"id\", \"bio\")\n        editor.setAttribute(\"name\", \"bio\");\n\n    }, [props.userPayload.email])\n\n    return (\n        <div className=\"bio bs-md p20\">\n            {showNotify !== \"\" &&  <Notify class=\"on\" text={showNotify} clearMess={setShowNotify} />}\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"quotes\" className=\"s-label mb4\">\n                    {fullname} quotes\n                </label>\n            </div>\n            <div className=\"ps-relative mb16\">\n                <input\n                    id=\"quotes\" name=\"quotes\" type=\"text\" className=\"s-input w-100\"\n                    value={quotes}\n                />\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"bio\" className=\"s-label mb4\">\n                    Bio\n                </label>\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <ReactMarkdown\n                    source={bio}\n                    renderers={{ code: CodeBlock }}\n                />\n            </div>\n            <div className=\"ps-relative mb16\">\n                <Mde />\n            </div>\n            <div className=\"d-flex w-100\">\n                <div id=\"wrap-btn-loading2\" className=\"ps-relative\">\n                    <button\n                        type=\"button\" className=\"s-btn btn-sm btn-outlined colorGreen\"\n                        onClick={handleChangeStory}\n                    >Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDetailStory;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/asks/Asks.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Asks.css';\nimport \"./Mainbar.css\";\nimport Mde from '../editor/Mde';\nimport Sidebar from './Sidebar';\nimport ModalPopup from './ModalPopup';\nimport Tags from '../components/Tags';\nimport { isAuthenticated } from '../../controllers/userController';\nimport Notify from '../components/Notify';\nimport { postAsk } from '../../controllers/askController';\n\nclass Asks extends React.Component {\n  constructor() {\n    super();\n\n    this.handleAsk = () => {\n      document.getElementById(\"wrap-btn-loading\").classList.add(\"btn-loading\"); // let token = isAuthenticated().token;\n      // let owner = isAuthenticated().user._id;\n      // let editor = document.querySelector(\"textarea.mde-text \");\n      // let body = \"\";\n      // if(editor) {\n      //     body = editor.value;\n      //     let title = document.getElementById(\"title\").value;\n      //     // tags\n      //     let tagsname = document.getElementById(\"tagsname\").value;\n      //     let tagsnameArray = tagsname.split(\" \")\n      //     tagsnameArray = tagsnameArray.filter( t => t !== \"\");\n      //     if(title) {\n      //         postAsk({title, body, tagsnameArray, owner}, token)\n      //         .then( res => {\n      //             console.log(res);\n      //             this.setState( {message: res.message} );\n      //         })\n      //     }\n      // } else {\n      //     alert(\"Please turn to write mode\")\n      // }\n    };\n\n    this.closeTag = text => {\n      let tagsname = document.getElementById(\"tagsname\");\n      let tagsnameArray = tagsname.value.split(\" \").filter(t => t !== text);\n      tagsname.value = tagsnameArray.join(\" \");\n      this.setState({\n        tagDom: tagsname.value\n      });\n    };\n\n    this.handleChangeTag = e => {\n      if (e.keyCode === 32) {\n        let tagsname = document.getElementById(\"tagsname\");\n        let tagreplace = document.getElementById(\"tageditor-replacing-tagnames--input\");\n        tagsname.value = tagsname.value + e.target.value;\n        this.setState({\n          tagDom: tagsname.value\n        });\n        tagreplace.value = \"\";\n      }\n    };\n\n    this.clearMess = () => {\n      this.setState({\n        message: \"\"\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      tagDom: \"\",\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    // \n    let editor = document.querySelector(\"textarea.mde-text \");\n    editor.setAttribute(\"id\", \"questionBody\");\n    editor.setAttribute(\"name\", \"questionBody\");\n    document.querySelector(\"#tageditor-replacing-tagnames--input\").addEventListener(\"keyup\", this.handleChangeTag, false);\n  }\n\n  componentDidUpdate() {\n    let tagsIncludedSize = document.querySelector(\".tags-included\").offsetWidth;\n    document.querySelector(\"#tageditor-replacing-tagnames--input\").style.paddingLeft = tagsIncludedSize + 10 + \"px\";\n  }\n\n  componentWillUnmount() {\n    document.querySelector(\"#tageditor-replacing-tagnames--input\").removeEventListener(\"keyup\", this.handleChangeTag, false);\n  }\n\n  render() {\n    const _this$state = this.state,\n          tagDom = _this$state.tagDom,\n          message = _this$state.message;\n    return React.createElement(\"div\", {\n      id: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"mainbar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Notify, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), message !== \"\" && React.createElement(Notify, {\n      class: \"on\",\n      text: message,\n      clearMess: this.clearMess,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid d-flex align-items-center mb16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"fs-headline1 mr-auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Ask a public question\"), React.createElement(Link, {\n      className: \"s-btn s-btn__outline s-btn__primary s-btn__primary\",\n      to: \"/questions/ask/example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"See example\"))), React.createElement(\"div\", {\n      id: \"question-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"bg-white bar-sm bs-md p16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-title ps-relative mb16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      className: \"s-label mb4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Title\", React.createElement(\"p\", {\n      className: \"s-desscription mt4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"A programming language or whatever \"))), React.createElement(\"div\", {\n      className: \"ps-relative mb16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"title\",\n      name: \"title\",\n      type: \"text\",\n      className: \"s-input w-100\",\n      placeholder: \"Enter title here\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"post-editor mb16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ps-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"questionBody\",\n      className: \"s-label mb16 d-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Body\", React.createElement(\"p\", {\n      className: \"s-desscription mt4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Announcement body (all of the information about the announcement)\")), React.createElement(Mde, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"d-flex align-items-center pb12 fc-light fs-caption mt16 mb24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mr16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"``` \", React.createElement(\"code\", {\n      className: \"ba bc-black-9 px4 py2 bar-sm bg-black-050 fc-black-800 ff-mono\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"code\"), \" ```\"), React.createElement(\"div\", {\n      className: \"mr16 fw-bold\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"**bold**\"), React.createElement(\"div\", {\n      className: \"mr16 fs-italic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, \"*italic*\"), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \">quote\")), React.createElement(\"div\", {\n      className: \"ps-relative pt24\",\n      id: \"tag-editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"tagsname\",\n      className: \"s-label mb16 d-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Tags\", React.createElement(\"p\", {\n      className: \"s-desscription mt4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Add tags to describe what your announcement is about\")), React.createElement(\"div\", {\n      className: \"ps-relative mb16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"tagsname\",\n      name: \"tagsname\",\n      type: \"text\",\n      className: \"s-input w-100 d-none\",\n      placeholder: \"e.g. (javascript xml react)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tags-editor ps-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"tags-included ps-absolute\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, tagDom.split(\" \").map((tag, index) => {\n      return tag !== \"\" && React.createElement(Tags, {\n        key: index,\n        id: \"data-\" + tag,\n        closeTag: () => this.closeTag(tag),\n        name: tag,\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      });\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      className: \"s-input w-100\",\n      placeholder: \"e.g. (javascript xml react)\",\n      id: \"tageditor-replacing-tagnames--input\",\n      onChange: e => this.handleChangeTag(e.target.value, e.keyCode),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })))))), React.createElement(\"span\", {\n      id: \"wrap-btn-loading ps-relative\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"s-btn s-btn__outline s-btn__primary mt24\",\n      onClick: this.handleAsk,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Post this\"))))), React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"clear-fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(ModalPopup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Asks;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/asks/Asks.js"],"names":["React","Link","Mde","Sidebar","ModalPopup","Tags","isAuthenticated","Notify","postAsk","Asks","Component","constructor","handleAsk","document","getElementById","classList","add","closeTag","text","tagsname","tagsnameArray","value","split","filter","t","join","setState","tagDom","handleChangeTag","e","keyCode","tagreplace","target","clearMess","message","state","title","body","componentDidMount","editor","querySelector","setAttribute","addEventListener","componentDidUpdate","tagsIncludedSize","offsetWidth","style","paddingLeft","componentWillUnmount","removeEventListener","render","map","tag","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Asks.css';\nimport \"./Mainbar.css\";\nimport Mde from '../editor/Mde';\nimport Sidebar from './Sidebar';\nimport ModalPopup from './ModalPopup';\nimport Tags from '../components/Tags';\nimport { isAuthenticated } from '../../controllers/userController';\nimport Notify from '../components/Notify';\nimport  { postAsk } from '../../controllers/askController';\n\nclass Asks extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"\",\n            body: \"\",\n            tagDom: \"\",\n            message: \"\",\n        }\n    }\n\n    handleAsk = () => {\n        document.getElementById(\"wrap-btn-loading\").classList.add(\"btn-loading\");\n\n        // let token = isAuthenticated().token;\n        // let owner = isAuthenticated().user._id;\n        // let editor = document.querySelector(\"textarea.mde-text \");\n        // let body = \"\";\n        \n        // if(editor) {\n        //     body = editor.value;\n        //     let title = document.getElementById(\"title\").value;\n        //     // tags\n        //     let tagsname = document.getElementById(\"tagsname\").value;\n        //     let tagsnameArray = tagsname.split(\" \")\n        //     tagsnameArray = tagsnameArray.filter( t => t !== \"\");\n\n        //     if(title) {\n        //         postAsk({title, body, tagsnameArray, owner}, token)\n        //         .then( res => {\n        //             console.log(res);\n        //             this.setState( {message: res.message} );\n        //         })\n        //     }\n        // } else {\n        //     alert(\"Please turn to write mode\")\n        // }\n        \n    }\n\n    closeTag = (text) => {\n        let tagsname = document.getElementById(\"tagsname\");\n        let tagsnameArray = tagsname.value.split(\" \").filter( t => t !== text);\n        tagsname.value = tagsnameArray.join(\" \");\n        this.setState( {tagDom: tagsname.value} );\n    }\n\n    handleChangeTag = (e) => {\n        if(e.keyCode === 32) {\n            let tagsname = document.getElementById(\"tagsname\");\n            let tagreplace = document.getElementById(\"tageditor-replacing-tagnames--input\")\n            tagsname.value = tagsname.value + e.target.value;\n            this.setState( {tagDom: tagsname.value} );\n            tagreplace.value = \"\";\n        }\n    }\n\n    clearMess = () => {\n        this.setState( {message: \"\"} );\n    }\n\n    componentDidMount() {\n        // \n        let editor = document.querySelector(\"textarea.mde-text \");\n        editor.setAttribute(\"id\", \"questionBody\")\n        editor.setAttribute(\"name\", \"questionBody\")\n\n        document.querySelector(\"#tageditor-replacing-tagnames--input\").addEventListener(\"keyup\", this.handleChangeTag, false);\n    }\n    componentDidUpdate() {\n        let tagsIncludedSize = document.querySelector(\".tags-included\").offsetWidth;\n        document.querySelector(\"#tageditor-replacing-tagnames--input\").style.paddingLeft = tagsIncludedSize + 10 + \"px\";\n    }\n    componentWillUnmount() {\n        document.querySelector(\"#tageditor-replacing-tagnames--input\").removeEventListener(\"keyup\", this.handleChangeTag, false);\n    }\n\n    render() {\n        const { tagDom, message } = this.state;\n        return (\n            <div id=\"content\">\n                <div id=\"mainbar\">\n                    <Notify />  \n                    {message !== \"\" &&  <Notify class=\"on\" text={message} clearMess={this.clearMess} />}\n                    <div className=\"main-head\">\n                        <div className=\"grid d-flex align-items-center mb16\">\n                            <h1 className=\"fs-headline1 mr-auto\">Ask a public question</h1>\n                            <Link className=\"s-btn s-btn__outline s-btn__primary s-btn__primary\" to=\"/questions/ask/example\">See example</Link>\n                        </div>\n                    </div>\n                    <div id=\"question-form\">\n                    <div className=\"bg-white bar-sm bs-md p16\">\n                        <div className=\"post-title ps-relative mb16\">\n                            <label htmlFor=\"title\" className=\"s-label mb4\">\n                                Title\n                                <p className=\"s-desscription mt4\">A programming language or whatever </p>\n                            </label>\n                        </div>\n                        <div className=\"ps-relative mb16\">\n                            <input id=\"title\" name=\"title\" type=\"text\" className=\"s-input w-100\" placeholder=\"Enter title here\"/>\n                        </div>\n                        \n                        <div className=\"post-editor mb16\">\n                            <div className=\"ps-relative\">\n                                <label htmlFor=\"questionBody\" className=\"s-label mb16 d-block\">\n                                    Body\n                                    <p className=\"s-desscription mt4\">Announcement body (all of the information about the announcement)</p>\n                                </label>\n                                <Mde />\n                                {/* CAPTOPN */}\n                                <div className=\"d-flex align-items-center pb12 fc-light fs-caption mt16 mb24\">\n                                    <div className=\"mr16\">\n                                        ``` <code className=\"ba bc-black-9 px4 py2 bar-sm bg-black-050 fc-black-800 ff-mono\">code</code> ```\n                                    </div>\n                                    <div className=\"mr16 fw-bold\">\n                                        **bold**\n                                    </div>\n                                    <div className=\"mr16 fs-italic\">\n                                        *italic*\n                                    </div>\n                                    <div className=\"\">\n                                        &gt;quote\n                                    </div>\n                                </div>\n                                {/* TAGS EDITOR */}\n                                <div className=\"ps-relative pt24\" id=\"tag-editor\">\n                                    <label htmlFor=\"tagsname\" className=\"s-label mb16 d-block\">\n                                        Tags\n                                        <p className=\"s-desscription mt4\">Add tags to describe what your announcement is about</p>\n                                    </label>\n                                    <div className=\"ps-relative mb16\">\n                                        <input \n                                            id=\"tagsname\" name=\"tagsname\" type=\"text\" className=\"s-input w-100 d-none\" placeholder=\"e.g. (javascript xml react)\"    \n                                        />\n                                        <div className=\"tags-editor ps-relative\" >\n                                            <span className=\"tags-included ps-absolute\">\n                                                \n                                                {\n                                                    tagDom.split(\" \").map( (tag, index) => {\n                                                        return tag !== \"\" && <Tags key={index} id={\"data-\" + tag} closeTag={() => this.closeTag(tag)} name={tag} close={true}/>\n                                                    })\n                                                }\n                                            </span>\n                                        <input\n                                            type=\"text\" className=\"s-input w-100\" placeholder=\"e.g. (javascript xml react)\"\n                                            id=\"tageditor-replacing-tagnames--input\"\n                                            onChange={(e) => this.handleChangeTag(e.target.value, e.keyCode)}\n                                        />\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <span id=\"wrap-btn-loading ps-relative\">\n                            <button\n                                className=\"s-btn s-btn__outline s-btn__primary mt24\"\n                                onClick={this.handleAsk}\n                            >Post this</button>\n                        </span>\n                    </div>\n                </div>\n                    \n            </div>\n    \n                <Sidebar />\n                <div className=\"clear-fix\"></div>\n    \n                <ModalPopup />\n                \n            </div>\n        )\n    }\n}\n\nexport default Asks;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const isAdmin = token => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/auth/isAdmin\"), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR IS ADMIN\"\n    };\n  });\n};\nexport const forgotPassword = email => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/auth/forgot-password?email=\").concat(email), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR FORGOT PASSWORD\"\n    };\n  });\n};\nexport const resestPassword = (resetCode, pwd) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/auth/reset-password\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    },\n    body: JSON.stringify({\n      resetCode,\n      pwd\n    })\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR RESET PASSWORD\"\n    };\n  });\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/controllers/authController.js"],"names":["isAdmin","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","then","res","json","catch","err","message","forgotPassword","email","resestPassword","resetCode","pwd","body","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,KAAD,IAAW;AAC9B,SAAOC,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,oBAAkD;AAC1DC,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGLC,MAAAA,aAAa,mBAAYR,KAAZ;AAHR;AAFiD,GAAlD,CAAL,CAQNS,IARM,CAQAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,EAWNC,KAXM,CAWCC,GAAG,IAAI;AACX,WAAO;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAP;AACH,GAbM,CAAP;AAcH,CAfM;AAiBP,OAAO,MAAMC,cAAc,GAAIC,KAAD,IAAW;AACrC,SAAOf,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,yCAAgEY,KAAhE,GAAyE;AACjFX,IAAAA,MAAM,EAAE,KADyE;AAEjFC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX;AAFwE,GAAzE,CAAL,CAONE,IAPM,CAOAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GATM,EAUNC,KAVM,CAUCC,GAAG,IAAI;AACX,WAAO;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAP;AACH,GAZM,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMG,cAAc,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB;AAC9C,SAAOlB,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,2BAAyD;AACjEC,IAAAA,MAAM,EAAE,MADyD;AAEjEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFwD;AAMjEa,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgB;AAACJ,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAhB;AAN2D,GAAzD,CAAL,CAQNV,IARM,CAQAC,GAAG,IAAI;AACV,WAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,GAVM,EAWNC,KAXM,CAWCC,GAAG,IAAI;AACX,WAAO;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAP;AACH,GAbM,CAAP;AAcH,CAfM","sourcesContent":["export const isAdmin = (token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/auth/isAdmin`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return { message: \"ERROR IS ADMIN\" }\n    });\n}\n\nexport const forgotPassword = (email) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/auth/forgot-password?email=${email}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return { message: \"ERROR FORGOT PASSWORD\" }\n    });\n}\n\nexport const resestPassword = (resetCode, pwd) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n        body: JSON.stringify( {resetCode, pwd} )\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return { message: \"ERROR RESET PASSWORD\" }\n    });\n}"]},"metadata":{},"sourceType":"module"}
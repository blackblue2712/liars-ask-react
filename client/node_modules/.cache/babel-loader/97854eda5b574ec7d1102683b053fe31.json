{"ast":null,"code":"import _regeneratorRuntime from\"/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectWithoutProperties from\"/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useEffect}from'react';import{Route}from'react-router-dom';import{isAuthenticated}from'../controllers/userController';import{isAdmin}from'../controllers/authController';var PrivateRouteAdmin=function PrivateRouteAdmin(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var check;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return isAdmin(isAuthenticated().token);case 2:check=_context.sent;console.log(check);if(check.message===\"admin\"){setOpen(true);// } else if(check.message === \"Permission deny\") {\n//     window.location = \"/\";\n//\n}else{window.location=\"/\";}case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}fetchData();},[]);return open===true?React.createElement(Route,Object.assign({},rest,{render:function render(props){return React.createElement(Component,Object.assign({},props,{userPayload:isAuthenticated()}));}})):React.createElement(\"div\",null);};export default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/src/admin/PrivateRouteAdmin.js"],"names":["React","useState","useEffect","Route","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","component","rest","open","setOpen","fetchData","token","check","console","log","message","window","location","props"],"mappings":"qqBAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,OAASC,KAAT,KAAsB,kBAAtB,CACA,OAASC,eAAT,KAAgC,+BAAhC,CACA,OAASC,OAAT,KAAwB,+BAAxB,CAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,4DAErCR,QAAQ,CAAC,KAAD,CAF6B,wCAEtDS,IAFsD,eAEhDC,OAFgD,eAI7DT,SAAS,CAAE,UAAM,SACEU,CAAAA,SADF,qIACb,mKACsBP,CAAAA,OAAO,CAACD,eAAe,GAAGS,KAAnB,CAD7B,QACQC,KADR,eAEIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAGA,KAAK,CAACG,OAAN,GAAkB,OAArB,CAA8B,CAC1BN,OAAO,CAAC,IAAD,CAAP,CACJ;AACA;AACA;AACC,CALD,IAKM,CACFO,MAAM,CAACC,QAAP,CAAkB,GAAlB,CACH,CAVL,sDADa,4CAabP,SAAS,GAGZ,CAhBQ,CAgBN,EAhBM,CAAT,CAkBA,MACIF,CAAAA,IAAI,GAAK,IAAT,CACA,oBAAC,KAAD,kBACQD,IADR,EAEI,MAAM,CAAG,gBAAAW,KAAK,QAEN,qBAAC,SAAD,kBAAeA,KAAf,EAAsB,WAAW,CAAEhB,eAAe,EAAlD,GAFM,EAFlB,GADA,CASE,+BAVN,CAYH,CAlCD,CAoCA,cAAeE,CAAAA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n    \n    const [open, setOpen] = useState(false);\n\n    useEffect( () => {\n        async function fetchData () {\n            let check = await isAdmin(isAuthenticated().token);\n            console.log(check)\n            if(check.message === \"admin\") {\n                setOpen(true);\n            // } else if(check.message === \"Permission deny\") {\n            //     window.location = \"/\";\n            //\n            }else {\n                window.location = \"/\";\n            }\n        }\n        fetchData();\n        \n\n    }, [])\n\n    return (\n        open === true ? \n        <Route\n            {...rest}\n            render={ props =>\n                (\n                    <Component {...props} userPayload={isAuthenticated()} />\n                )\n            }\n        />\n        : <div></div>\n    );\n}\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}
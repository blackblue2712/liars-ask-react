{"ast":null,"code":"export var postWriteBlog=function postWriteBlog(blogInfo,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/write\"),{method:\"POST\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(blogInfo)}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR POST WRITE BLOG\"};});};export var getBlogs=function getBlogs(){var number=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs?limit=\").concat(number),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET BLOGS\"};});};export var getAllBlogs=function getAllBlogs(){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/all\"),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET ALL BLOGS\"};});};export var getYourBlogs=function getYourBlogs(userId){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/your-blogs?userId=\").concat(userId),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET YOUR BLOGS\"};});};export var getSingleBlog=function getSingleBlog(id){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/\").concat(id),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET SINGLE BLOG\"};});};export var getSingleBlogToEdit=function getSingleBlogToEdit(id,uid){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/edit/\").concat(id,\"?uid=\").concat(uid),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET SINGLE BLOG TO EDIT\"};});};export var putEditBlog=function putEditBlog(blogInfo,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/blogs/edit/\").concat(blogInfo.id),{method:\"PUT\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(blogInfo)}).then(function(res){return res.json();}).catch(function(err){console.log(\"ERROR POST ANNOUNCEMENT\");});};","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/controllers/blogController.js"],"names":["postWriteBlog","blogInfo","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","message","getBlogs","number","getAllBlogs","getYourBlogs","userId","getSingleBlog","id","getSingleBlogToEdit","uid","putEditBlog","console","log"],"mappings":"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","sourcesContent":["\nexport const postWriteBlog = (blogInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/write`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(blogInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR POST WRITE BLOG\"}\n    });\n}\n\nexport const getBlogs = (number = 5) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs?limit=${number}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET BLOGS\"}\n    })\n}\n\nexport const getAllBlogs = () => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/all`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET ALL BLOGS\"}\n    })\n}\n\nexport const getYourBlogs = (userId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/your-blogs?userId=${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET YOUR BLOGS\"}\n    })\n}\n\n\nexport const getSingleBlog = (id) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/${id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE BLOG\"}\n    })\n}\n\nexport const getSingleBlogToEdit =(id, uid) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/edit/${id}?uid=${uid}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE BLOG TO EDIT\"}\n    })\n}\n\nexport const putEditBlog = (blogInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/edit/${blogInfo.id}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(blogInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR POST ANNOUNCEMENT\");\n    })\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export var voteAnswerUp=function voteAnswerUp(ansId,userId,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/votes/answer/voteUp/\").concat(ansId),{method:\"POST\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({userId:userId})}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR VOTE ANSWER UP\"};});};export var voteAnswerDown=function voteAnswerDown(ansId,userId,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/votes/answer/voteDown/\").concat(ansId),{method:\"POST\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify({userId:userId})}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR VOTE ANSWER DOWN\"};});};","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/src/controllers/voteController.js"],"names":["voteAnswerUp","ansId","userId","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","message","voteAnswerDown"],"mappings":"AACA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAgBC,KAAhB,CAA0B,CAClD,MAAOC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,iCAAyDN,KAAzD,EAAkE,CAC1EO,MAAM,CAAE,MADkE,CAE1EC,OAAO,CAAE,CACLC,MAAM,CAAE,kBADH,CAEL,eAAgB,kBAFX,CAGLC,aAAa,kBAAYR,KAAZ,CAHR,CAFiE,CAO1ES,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACZ,MAAM,CAANA,MAAD,CAAf,CAPoE,CAAlE,CAAL,CASNa,IATM,CASA,SAAAC,GAAG,CAAI,CACV,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACH,CAXM,EAYNC,KAZM,CAYC,SAAAC,GAAG,CAAI,CACX,MAAO,CAACC,OAAO,CAAE,sBAAV,CAAP,CACH,CAdM,CAAP,CAeH,CAhBM,CAmBP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACpB,KAAD,CAAQC,MAAR,CAAgBC,KAAhB,CAA0B,CACpD,MAAOC,CAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,iBAAhB,mCAA2DN,KAA3D,EAAoE,CAC5EO,MAAM,CAAE,MADoE,CAE5EC,OAAO,CAAE,CACLC,MAAM,CAAE,kBADH,CAEL,eAAgB,kBAFX,CAGLC,aAAa,kBAAYR,KAAZ,CAHR,CAFmE,CAO5ES,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAACZ,MAAM,CAANA,MAAD,CAAf,CAPsE,CAApE,CAAL,CASNa,IATM,CASA,SAAAC,GAAG,CAAI,CACV,MAAOA,CAAAA,GAAG,CAACC,IAAJ,EAAP,CACH,CAXM,EAYNC,KAZM,CAYC,SAAAC,GAAG,CAAI,CACX,MAAO,CAACC,OAAO,CAAE,wBAAV,CAAP,CACH,CAdM,CAAP,CAeH,CAhBM","sourcesContent":["\nexport const voteAnswerUp = (ansId, userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/votes/answer/voteUp/${ansId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({userId})\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR VOTE ANSWER UP\"}\n    });\n}\n\n\nexport const voteAnswerDown = (ansId, userId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/votes/answer/voteDown/${ansId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({userId})\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR VOTE ANSWER DOWN\"}\n    });\n}\n"]},"metadata":{},"sourceType":"module"}
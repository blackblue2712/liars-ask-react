{"ast":null,"code":"import _slicedToArray from\"/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import Mde from'../editor/Mde';import{putUpdateStory}from'../../controllers/userController';import ReactMarkdown from'react-markdown';import CodeBlock from'../editor/CodeBlock';import Notify from'../components/Notify';var UserDetailStory=function UserDetailStory(props){var _props$userPayload=props.userPayload,quotes=_props$userPayload.quotes,bio=_props$userPayload.bio,_id=_props$userPayload._id;var _useState=useState(quotes),_useState2=_slicedToArray(_useState,2),fquotes=_useState2[0],setQuotes=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),showNotify=_useState4[0],setShowNotify=_useState4[1];var handleChangeStory=function handleChangeStory(){var btnLoading=document.getElementById(\"wrap-btn-loading\");var editor=document.querySelector(\"textarea.mde-text \");btnLoading.classList.add(\"btn-loading\");try{if(!editor){alert(\"Please out preview mode\");}else{var bioUpdate=editor.value;putUpdateStory({bioUpdate:bioUpdate,fquotes:fquotes,_id:_id}).then(function(res){setShowNotify(res.message);btnLoading.classList.remove(\"btn-loading\");}).catch(function(err){setShowNotify(\"Error occur in promise\");btnLoading.classList.remove(\"btn-loading\");});}}catch(err){console.log(err);setShowNotify(\"Error occur (console)\");btnLoading.classList.remove(\"btn-loading\");}};useEffect(function(){var editor=document.querySelector(\"textarea.mde-text\");editor.setAttribute(\"id\",\"bio\");editor.setAttribute(\"name\",\"bio\");setQuotes(quotes);},[props.userPayload.email]);return React.createElement(\"div\",{className:\"bio bs-md p20\"},showNotify!==\"\"&&React.createElement(Notify,{class:\"on\",text:showNotify,clearMess:setShowNotify}),React.createElement(\"div\",{className:\"post-title ps-relative mb4\"},React.createElement(\"label\",{htmlFor:\"quotes\",className:\"s-label mb4\"},\"Your quotes\")),React.createElement(\"div\",{className:\"ps-relative mb16\"},React.createElement(\"input\",{id:\"quotes\",name:\"quotes\",type:\"text\",className:\"s-input w-100\",value:fquotes,onChange:function onChange(e){return setQuotes(e.target.value);}})),React.createElement(\"div\",{className:\"post-title ps-relative mb4\"},React.createElement(\"label\",{htmlFor:\"bio\",className:\"s-label mb4\"},\"Bio\")),React.createElement(\"div\",{className:\"post-title ps-relative mb4\"},React.createElement(ReactMarkdown,{source:bio,renderers:{code:CodeBlock}})),React.createElement(\"div\",{className:\"ps-relative mb16\"},React.createElement(Mde,null)),React.createElement(\"div\",{className:\"d-flex w-100\"},React.createElement(\"div\",{id:\"wrap-btn-loading2\",className:\"ps-relative\"},React.createElement(\"button\",{type:\"button\",className:\"s-btn btn-sm btn-outlined colorGreen\",onClick:handleChangeStory},\"Save\"))));};export default UserDetailStory;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/src/client/users/UserDetailStory.js"],"names":["React","useState","useEffect","Mde","putUpdateStory","ReactMarkdown","CodeBlock","Notify","UserDetailStory","props","userPayload","quotes","bio","_id","fquotes","setQuotes","showNotify","setShowNotify","handleChangeStory","btnLoading","document","getElementById","editor","querySelector","classList","add","alert","bioUpdate","value","then","res","message","remove","catch","err","console","log","setAttribute","email","e","target","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Mde from '../editor/Mde';\nimport { putUpdateStory } from '../../controllers/userController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Notify from '../components/Notify';\n\nconst UserDetailStory = (props) => {\n\n    const { quotes, bio, _id } = props.userPayload;\n    const [fquotes, setQuotes] = useState(quotes);\n    const [showNotify, setShowNotify] = useState(\"\");\n\n    const handleChangeStory = () => {\n        let btnLoading = document.getElementById(\"wrap-btn-loading\");\n        let editor = document.querySelector(\"textarea.mde-text \");\n        btnLoading.classList.add(\"btn-loading\");\n        try {\n            if(!editor) {\n                alert(\"Please out preview mode\");\n            } else {\n                let bioUpdate = editor.value;\n                putUpdateStory({bioUpdate, fquotes, _id})\n                .then( res => {\n                    setShowNotify(res.message);\n                    btnLoading.classList.remove(\"btn-loading\");\n                })\n                .catch(err => {\n                    setShowNotify(\"Error occur in promise\");\n                    btnLoading.classList.remove(\"btn-loading\");\n                })\n            }\n        } catch (err) {\n            console.log(err);\n            setShowNotify(\"Error occur (console)\");\n            btnLoading.classList.remove(\"btn-loading\");\n        }\n    }\n\n    useEffect( () => {\n        let editor = document.querySelector(\"textarea.mde-text\");\n        editor.setAttribute(\"id\", \"bio\")\n        editor.setAttribute(\"name\", \"bio\");\n\n        setQuotes(quotes);\n    }, [props.userPayload.email])\n\n    return (\n        <div className=\"bio bs-md p20\">\n            {showNotify !== \"\" &&  <Notify class=\"on\" text={showNotify} clearMess={setShowNotify} />}\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"quotes\" className=\"s-label mb4\">\n                    Your quotes\n                </label>\n            </div>\n            <div className=\"ps-relative mb16\">\n                <input\n                    id=\"quotes\" name=\"quotes\" type=\"text\" className=\"s-input w-100\"\n                    value={fquotes}\n                    onChange={ (e) => setQuotes(e.target.value) }\n                />\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"bio\" className=\"s-label mb4\">\n                    Bio\n                </label>\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <ReactMarkdown\n                    source={bio}\n                    renderers={{ code: CodeBlock }}\n                />\n            </div>\n            <div className=\"ps-relative mb16\">\n                <Mde />\n            </div>\n            <div className=\"d-flex w-100\">\n                <div id=\"wrap-btn-loading2\" className=\"ps-relative\">\n                    <button\n                        type=\"button\" className=\"s-btn btn-sm btn-outlined colorGreen\"\n                        onClick={handleChangeStory}\n                    >Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDetailStory;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export const postAnnouncement = (announInfo, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements/new\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(announInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR POST ANNOUNCEMENT\");\n  });\n};\nexport const putEditAnnouncement = (announInfo, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements/edit/\").concat(announInfo.id), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(announInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR POST ANNOUNCEMENT\");\n  });\n};\nexport const deleteAcm = (id, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements/delete/\").concat(id), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR DELETE ANNOUNCEMENT\");\n  });\n};\nexport const getAnnouncements = userId => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements/your-acm/\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR GET ANNOUNCEMENTS\");\n  });\n};\nexport const getAllAnnouncements = () => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements\"), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR GET ANNOUNCEMENTS\");\n  });\n};\nexport const getSingleAnnouncement = id => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/announcements/\").concat(id), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR GET SINGLE ACM\");\n  });\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/controllers/announcementController.js"],"names":["postAnnouncement","announInfo","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","console","log","putEditAnnouncement","id","deleteAcm","getAnnouncements","userId","getAllAnnouncements","getSingleAnnouncement"],"mappings":"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","sourcesContent":["\nexport const postAnnouncement = (announInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements/new`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(announInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR POST ANNOUNCEMENT\");\n    })\n}\n\nexport const putEditAnnouncement = (announInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements/edit/${announInfo.id}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(announInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR POST ANNOUNCEMENT\");\n    })\n}\n\nexport const deleteAcm = (id, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements/delete/${id}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR DELETE ANNOUNCEMENT\");\n    })\n}\n\nexport const  getAnnouncements = (userId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements/your-acm/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR GET ANNOUNCEMENTS\");\n    })\n}\n\nexport const  getAllAnnouncements = () => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR GET ANNOUNCEMENTS\");\n    })\n}\n\nexport const getSingleAnnouncement = (id) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/announcements/${id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR GET SINGLE ACM\");\n    })\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/questions/ListWrapper.js\";\nimport React, { useState, useEffect } from 'react';\nimport ListItem from './ListItem';\nimport Skeleton from '../components/Skeleton';\n\nconst ListWrapper = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        questions = _useState2[0],\n        setQues = _useState2[1];\n\n  useEffect(() => {\n    setQues(props.data);\n  });\n\n  if (!props.data) {\n    return React.createElement(Skeleton, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    });\n  } else {\n    return React.createElement(\"div\", {\n      id: \"list-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mini-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, questions && questions.map((ques, i) => {\n      return React.createElement(ListItem, {\n        key: i,\n        title: ques.title,\n        body: ques.body,\n        tags: ques.tags,\n        id: ques._id,\n        answers: ques.answers.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    })));\n  }\n};\n\nexport default ListWrapper;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/questions/ListWrapper.js"],"names":["React","useState","useEffect","ListItem","Skeleton","ListWrapper","props","questions","setQues","data","map","ques","i","title","body","tags","_id","answers","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA,oBACIL,QAAQ,CAAC,EAAD,CADZ;AAAA;AAAA,QAClBM,SADkB;AAAA,QACPC,OADO;;AAGzBN,EAAAA,SAAS,CAAE,MAAM;AACbM,IAAAA,OAAO,CAACF,KAAK,CAACG,IAAP,CAAP;AACH,GAFQ,CAAT;;AAIA,MAAG,CAACH,KAAK,CAACG,IAAV,EAAgB;AACZ,WAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFD,MAEO;AACH,WACI;AAAK,MAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQF,SAAS,IAAIA,SAAS,CAACG,GAAV,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrC,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,KAAK,EAAED,IAAI,CAACE,KAA9B;AAAqC,QAAA,IAAI,EAAEF,IAAI,CAACG,IAAhD;AAAsD,QAAA,IAAI,EAAEH,IAAI,CAACI,IAAjE;AAAuE,QAAA,EAAE,EAAEJ,IAAI,CAACK,GAAhF;AAAqF,QAAA,OAAO,EAAEL,IAAI,CAACM,OAAL,CAAaC,MAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFY,CAHrB,CADJ,CADJ;AAYH;AACJ,CAvBD;;AAyBA,eAAeb,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ListItem from './ListItem';\nimport Skeleton from '../components/Skeleton';\n\nconst ListWrapper = props => {\n    const [questions, setQues] = useState([]);\n\n    useEffect( () => {\n        setQues(props.data);\n    })\n\n    if(!props.data) {\n        return <Skeleton />\n    } else {\n        return (\n            <div id=\"list-wrapper\">\n                <div className=\"mini-list\">\n                    \n                    {\n                        questions && questions.map( (ques, i) => {\n                            return <ListItem key={i} title={ques.title} body={ques.body} tags={ques.tags} id={ques._id} answers={ques.answers.length} /> \n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListWrapper;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/src/client/users/UserDetailStory.js\";\nimport React, { useState, useEffect } from 'react';\nimport Mde from '../editor/Mde';\nimport { putUpdateStory } from '../../controllers/userController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Notify from '../components/Notify';\n\nconst UserDetailStory = props => {\n  const _props$userPayload = props.userPayload,\n        quotes = _props$userPayload.quotes,\n        bio = _props$userPayload.bio,\n        _id = _props$userPayload._id;\n\n  const _useState = useState(quotes),\n        _useState2 = _slicedToArray(_useState, 2),\n        fquotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showNotify = _useState4[0],\n        setShowNotify = _useState4[1];\n\n  const handleChangeStory = () => {\n    let btnLoading = document.getElementById(\"wrap-btn-loading\");\n    let editor = document.querySelector(\"textarea.mde-text \");\n    btnLoading.classList.add(\"btn-loading\");\n\n    try {\n      if (!editor) {\n        alert(\"Please out preview mode\");\n      } else {\n        let bioUpdate = editor.value;\n        putUpdateStory({\n          bioUpdate,\n          fquotes,\n          _id\n        }).then(res => {\n          setShowNotify(res.message);\n          btnLoading.classList.remove(\"btn-loading\");\n        }).catch(err => {\n          setShowNotify(\"Error occur in promise\");\n          btnLoading.classList.remove(\"btn-loading\");\n        });\n      }\n    } catch (err) {\n      console.log(err);\n      setShowNotify(\"Error occur (console)\");\n      btnLoading.classList.remove(\"btn-loading\");\n    }\n  };\n\n  useEffect(() => {\n    let editor = document.querySelector(\"textarea.mde-text\");\n    editor.setAttribute(\"id\", \"bio\");\n    editor.setAttribute(\"name\", \"bio\");\n    setQuotes(quotes);\n  }, [props.userPayload.email]);\n  return React.createElement(\"div\", {\n    className: \"bio bs-md p20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, showNotify !== \"\" && React.createElement(Notify, {\n    class: \"on\",\n    text: showNotify,\n    clearMess: setShowNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"quotes\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Your quotes\")), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"quotes\",\n    name: \"quotes\",\n    type: \"text\",\n    className: \"s-input w-100\",\n    value: fquotes,\n    onChange: e => setQuotes(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"bio\",\n    className: \"s-label mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Bio\")), React.createElement(\"div\", {\n    className: \"post-title ps-relative mb4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(ReactMarkdown, {\n    source: bio,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"ps-relative mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Mde, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"d-flex w-100\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"wrap-btn-loading2\",\n    className: \"ps-relative\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"s-btn btn-sm btn-outlined colorGreen\",\n    onClick: handleChangeStory,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Save\"))));\n};\n\nexport default UserDetailStory;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/src/client/users/UserDetailStory.js"],"names":["React","useState","useEffect","Mde","putUpdateStory","ReactMarkdown","CodeBlock","Notify","UserDetailStory","props","userPayload","quotes","bio","_id","fquotes","setQuotes","showNotify","setShowNotify","handleChangeStory","btnLoading","document","getElementById","editor","querySelector","classList","add","alert","bioUpdate","value","then","res","message","remove","catch","err","console","log","setAttribute","email","e","target","code"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Mde from '../editor/Mde';\nimport { putUpdateStory } from '../../controllers/userController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Notify from '../components/Notify';\n\nconst UserDetailStory = (props) => {\n\n    const { quotes, bio, _id } = props.userPayload;\n    const [fquotes, setQuotes] = useState(quotes);\n    const [showNotify, setShowNotify] = useState(\"\");\n\n    const handleChangeStory = () => {\n        let btnLoading = document.getElementById(\"wrap-btn-loading\");\n        let editor = document.querySelector(\"textarea.mde-text \");\n        btnLoading.classList.add(\"btn-loading\");\n        try {\n            if(!editor) {\n                alert(\"Please out preview mode\");\n            } else {\n                let bioUpdate = editor.value;\n                putUpdateStory({bioUpdate, fquotes, _id})\n                .then( res => {\n                    setShowNotify(res.message);\n                    btnLoading.classList.remove(\"btn-loading\");\n                })\n                .catch(err => {\n                    setShowNotify(\"Error occur in promise\");\n                    btnLoading.classList.remove(\"btn-loading\");\n                })\n            }\n        } catch (err) {\n            console.log(err);\n            setShowNotify(\"Error occur (console)\");\n            btnLoading.classList.remove(\"btn-loading\");\n        }\n    }\n\n    useEffect( () => {\n        let editor = document.querySelector(\"textarea.mde-text\");\n        editor.setAttribute(\"id\", \"bio\")\n        editor.setAttribute(\"name\", \"bio\");\n\n        setQuotes(quotes);\n    }, [props.userPayload.email])\n\n    return (\n        <div className=\"bio bs-md p20\">\n            {showNotify !== \"\" &&  <Notify class=\"on\" text={showNotify} clearMess={setShowNotify} />}\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"quotes\" className=\"s-label mb4\">\n                    Your quotes\n                </label>\n            </div>\n            <div className=\"ps-relative mb16\">\n                <input\n                    id=\"quotes\" name=\"quotes\" type=\"text\" className=\"s-input w-100\"\n                    value={fquotes}\n                    onChange={ (e) => setQuotes(e.target.value) }\n                />\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <label htmlFor=\"bio\" className=\"s-label mb4\">\n                    Bio\n                </label>\n            </div>\n            <div className=\"post-title ps-relative mb4\">\n                <ReactMarkdown\n                    source={bio}\n                    renderers={{ code: CodeBlock }}\n                />\n            </div>\n            <div className=\"ps-relative mb16\">\n                <Mde />\n            </div>\n            <div className=\"d-flex w-100\">\n                <div id=\"wrap-btn-loading2\" className=\"ps-relative\">\n                    <button\n                        type=\"button\" className=\"s-btn btn-sm btn-outlined colorGreen\"\n                        onClick={handleChangeStory}\n                    >Save\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserDetailStory;"]},"metadata":{},"sourceType":"module"}
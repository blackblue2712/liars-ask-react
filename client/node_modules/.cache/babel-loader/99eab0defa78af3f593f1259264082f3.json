{"ast":null,"code":"import _classCallCheck from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Mde from'../editor/Mde';import{isAuthenticated}from'../../controllers/userController';import{withRouter}from'react-router-dom';import{postAnswer}from'../../controllers/askController';import Notify from'../components/Notify';var YourAnswer=/*#__PURE__*/function(_React$Component){_inherits(YourAnswer,_React$Component);function YourAnswer(){var _this;_classCallCheck(this,YourAnswer);_this=_possibleConstructorReturn(this,_getPrototypeOf(YourAnswer).call(this));_this.handlePostAnswer=function(){var editor=document.querySelector(\"textarea.mde-text\");if(editor&&editor.value.length>0){var body=editor.value;var userId=isAuthenticated().user._id;var token=isAuthenticated().token;var quesId=_this.props.match.params.quesId;postAnswer({body:body,userId:userId,quesId:quesId},token).then(function(res){_this.setState({message:res.message});if(res.message===\"Your answer added\"){editor.value=\"\";var email=isAuthenticated().user.email;var photo=isAuthenticated().user.photo;_this.props.addAnswer({body:body,votes:[],owner:{_id:userId,email:email,photo:photo,votes:[]}});}});}else{alert(\"Please enter your answer and turn editor to write mode\");}};_this.clearMess=function(){_this.setState({message:\"\"});};_this.state={message:\"\"};return _this;}_createClass(YourAnswer,[{key:\"render\",value:function render(){var message=this.state.message;return React.createElement(\"div\",{id:\"youranswer\"},React.createElement(Notify,null),message!==\"\"&&React.createElement(Notify,{class:\"on\",text:message,clearMess:this.clearMess}),React.createElement(\"div\",{className:\"answers-header\"},React.createElement(\"h2\",{className:\"mb24\"},\"Your answer\"),React.createElement(Mde,null),React.createElement(\"button\",{className:\"s-btn s-btn__outline s-btn__primary mt24\",onClick:this.handlePostAnswer},\"Post your answer\")));}}]);return YourAnswer;}(React.Component);export default withRouter(YourAnswer);","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/questions/YourAnswer.js"],"names":["React","Mde","isAuthenticated","withRouter","postAnswer","Notify","YourAnswer","handlePostAnswer","editor","document","querySelector","value","length","body","userId","user","_id","token","quesId","props","match","params","then","res","setState","message","email","photo","addAnswer","votes","owner","alert","clearMess","state","Component"],"mappings":"i6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,GAAP,KAAgB,eAAhB,CACA,OAASC,eAAT,KAAgC,kCAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,UAAT,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,C,GAGMC,CAAAA,U,gFACF,qBAAc,4CACV,8EADU,MAOdC,gBAPc,CAOK,UAAM,CACrB,GAAIC,CAAAA,MAAM,CAAGC,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAAb,CACA,GAAGF,MAAM,EAAIA,MAAM,CAACG,KAAP,CAAaC,MAAb,CAAsB,CAAnC,CAAsC,CAClC,GAAIC,CAAAA,IAAI,CAAGL,MAAM,CAACG,KAAlB,CACA,GAAIG,CAAAA,MAAM,CAAGZ,eAAe,GAAGa,IAAlB,CAAuBC,GAApC,CACA,GAAIC,CAAAA,KAAK,CAAIf,eAAe,GAAGe,KAA/B,CACA,GAAIC,CAAAA,MAAM,CAAG,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC,CAEAd,UAAU,CAAE,CAACS,IAAI,CAAJA,IAAD,CAAOC,MAAM,CAANA,MAAP,CAAeI,MAAM,CAANA,MAAf,CAAF,CAA0BD,KAA1B,CAAV,CACCK,IADD,CACO,SAAAC,GAAG,CAAI,CACV,MAAKC,QAAL,CAAe,CAACC,OAAO,CAAEF,GAAG,CAACE,OAAd,CAAf,EACA,GAAGF,GAAG,CAACE,OAAJ,GAAgB,mBAAnB,CAAwC,CACpCjB,MAAM,CAACG,KAAP,CAAe,EAAf,CACA,GAAIe,CAAAA,KAAK,CAAGxB,eAAe,GAAGa,IAAlB,CAAuBW,KAAnC,CACA,GAAIC,CAAAA,KAAK,CAAGzB,eAAe,GAAGa,IAAlB,CAAuBY,KAAnC,CACA,MAAKR,KAAL,CAAWS,SAAX,CAAqB,CACjBf,IAAI,CAAJA,IADiB,CAEjBgB,KAAK,CAAE,EAFU,CAGjBC,KAAK,CAAE,CACHd,GAAG,CAAEF,MADF,CAEHY,KAAK,CAALA,KAFG,CAGHC,KAAK,CAALA,KAHG,CAIHE,KAAK,CAAE,EAJJ,CAHU,CAArB,EAUH,CACJ,CAlBD,EAoBH,CA1BD,IA0BO,CACHE,KAAK,CAAC,wDAAD,CAAL,CACH,CACJ,CAtCa,OAwCdC,SAxCc,CAwCF,UAAM,CACd,MAAKR,QAAL,CAAe,CAACC,OAAO,CAAE,EAAV,CAAf,EACH,CA1Ca,CAEV,MAAKQ,KAAL,CAAa,CACTR,OAAO,CAAE,EADA,CAAb,CAFU,aAKb,C,8DAuCQ,IACCA,CAAAA,OADD,CACa,KAAKQ,KADlB,CACCR,OADD,CAEL,MACI,4BAAK,EAAE,CAAC,YAAR,EACI,oBAAC,MAAD,MADJ,CAEKA,OAAO,GAAK,EAAZ,EAAmB,oBAAC,MAAD,EAAQ,KAAK,CAAC,IAAd,CAAmB,IAAI,CAAEA,OAAzB,CAAkC,SAAS,CAAE,KAAKO,SAAlD,EAFxB,CAGI,2BAAK,SAAS,CAAC,gBAAf,EACI,0BAAI,SAAS,CAAC,MAAd,gBADJ,CAEI,oBAAC,GAAD,MAFJ,CAGI,8BACI,SAAS,CAAC,0CADd,CAEI,OAAO,CAAE,KAAKzB,gBAFlB,qBAHJ,CAHJ,CADJ,CAcH,C,wBA7DoBP,KAAK,CAACkC,S,EAiE/B,cAAe/B,CAAAA,UAAU,CAACG,UAAD,CAAzB","sourcesContent":["import React from 'react'\nimport Mde from '../editor/Mde';\nimport { isAuthenticated } from '../../controllers/userController';\nimport { withRouter } from 'react-router-dom';\nimport { postAnswer } from '../../controllers/askController' ;\nimport Notify from '../components/Notify';\n\n\nclass YourAnswer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            message: \"\"\n        }\n    }\n\n    handlePostAnswer = () => {\n        let editor = document.querySelector(\"textarea.mde-text\");\n        if(editor && editor.value.length > 0) {\n            let body = editor.value;\n            let userId = isAuthenticated().user._id;\n            let token  = isAuthenticated().token;\n            let quesId = this.props.match.params.quesId;\n\n            postAnswer( {body, userId, quesId}, token )\n            .then( res => {\n                this.setState( {message: res.message} );\n                if(res.message === \"Your answer added\") {\n                    editor.value = \"\";\n                    let email = isAuthenticated().user.email;\n                    let photo = isAuthenticated().user.photo;\n                    this.props.addAnswer({\n                        body,\n                        votes: [],\n                        owner: {\n                            _id: userId,\n                            email,\n                            photo,\n                            votes: []\n                        }\n                    })\n                }\n            })\n\n        } else {\n            alert(\"Please enter your answer and turn editor to write mode\");\n        }\n    }\n\n    clearMess = () => {\n        this.setState( {message: \"\"} );\n    }\n\n    render() {\n        let { message } = this.state;\n        return (\n            <div id=\"youranswer\">\n                <Notify />  \n                {message !== \"\" &&  <Notify class=\"on\" text={message} clearMess={this.clearMess} />}\n                <div className=\"answers-header\">\n                    <h2 className=\"mb24\">Your answer</h2>\n                    <Mde />\n                    <button\n                        className=\"s-btn s-btn__outline s-btn__primary mt24\"\n                        onClick={this.handlePostAnswer}\n                    >Post your answer</button>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default withRouter(YourAnswer);"]},"metadata":{},"sourceType":"module"}
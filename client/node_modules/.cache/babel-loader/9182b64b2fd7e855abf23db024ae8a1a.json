{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/Study_space/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/blogs/SingleBlogs.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getSingleBlog } from '../../controllers/blogController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Tags from '../components/Tags';\n\nconst SingleBlog = props => {\n  let _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      blog = _useState2[0],\n      setBlog = _useState2[1];\n\n  useEffect(() => {\n    getSingleBlog(props.match.params.blogId).then(res => {\n      if (res) setBlog(res);\n    });\n  }, [blog._id]);\n  console.log(blog);\n  return React.createElement(\"div\", {\n    id: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    id: \"mainbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"main-head\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"grid d-flex align-items-centers mb16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"fs-headline1 mr-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, blog.title)), React.createElement(\"p\", {\n    className: \"mb24 f13 fw350\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"bg-white bar-sm bs-md p16 md-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(ReactMarkdown, {\n    source: blog.body,\n    renderers: {\n      code: CodeBlock\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), blog.anonymousTags && blog.anonymousTags.map((tag, i) => {\n    return React.createElement(Tags, {\n      key: i,\n      name: tag,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: \"clear-fix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"nearfooter\",\n    style: {\n      padding: \"40px 0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Looking for more? Browse\", React.createElement(\"a\", {\n    style: {\n      color: \"#3af\"\n    },\n    href: \"#a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \" the complete list of questions\"), \", or\", React.createElement(\"a\", {\n    style: {\n      color: \"#3af\"\n    },\n    href: \"#a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \" popular tags \"), \".Help us answer\", React.createElement(\"a\", {\n    style: {\n      color: \"#3af\"\n    },\n    href: \"#a\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \" unanswered questions\"), \".\"))), React.createElement(\"div\", {\n    className: \"clear-fix\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n};\n\nexport default SingleBlog;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/blogs/SingleBlogs.js"],"names":["React","useState","useEffect","getSingleBlog","ReactMarkdown","CodeBlock","Tags","SingleBlog","props","blog","setBlog","match","params","blogId","then","res","_id","console","log","title","body","code","anonymousTags","map","tag","i","padding","color"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { getSingleBlog } from '../../controllers/blogController';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from '../editor/CodeBlock';\nimport Tags from '../components/Tags'\n\nconst SingleBlog = (props) => {\n    let [blog, setBlog] = useState({});\n\n    useEffect( () => {\n\n        getSingleBlog(props.match.params.blogId)\n        .then( res => {\n            if(res) setBlog(res)\n        })\n\n    }, [blog._id])\n\n    console.log(blog)\n    return (\n        <div id=\"content\">\n            <div id=\"mainbar\">\n                <div className=\"main-head\">\n                    <div className=\"grid d-flex align-items-centers mb16\">\n                        <h1 className=\"fs-headline1 mr-auto\">{blog.title}</h1>\n                    </div>\n                    <p className=\"mb24 f13 fw350\"></p>\n                </div>\n\n                <div className=\"bg-white bar-sm bs-md p16 md-content\">\n                    \n                    <ReactMarkdown source={blog.body} renderers={{ code: CodeBlock }} />\n                    \n                    {\n                        blog.anonymousTags && blog.anonymousTags.map( (tag,i) => {\n                            return <Tags key={i} name={tag}/>\n                        })\n                    }\n                </div>\n                \n                <div className=\"clear-fix\"></div>\n                <div className=\"nearfooter\" style={{padding: \"40px 0px\"}}>\n                    <p>\n                        Looking for more? Browse \n                        <a style={{ color: \"#3af\" }} href=\"#a\"> the complete list of questions</a>\n                        , or\n                        <a style={{ color: \"#3af\" }} href=\"#a\"> popular tags </a>\n                        .Help us answer \n                        <a style={{ color: \"#3af\" }} href=\"#a\"> unanswered questions</a>\n                        .\n                    </p>\n                </div>\n            </div>\n            \n            \n            <div className=\"clear-fix\"></div>\n        </div>\n    )\n}\n\nexport default SingleBlog;"]},"metadata":{},"sourceType":"module"}
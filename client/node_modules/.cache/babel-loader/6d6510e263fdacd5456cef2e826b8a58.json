{"ast":null,"code":"export const postWriteBlog = (blogInfo, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/write\"), {\n    method: \"POST\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(blogInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR POST WRITE BLOG\"\n    };\n  });\n};\nexport const getBlogs = (number = 5) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs?limit=\").concat(number), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR GET BLOGS\"\n    };\n  });\n};\nexport const getAllBlogs = () => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/all\"), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR GET ALL BLOGS\"\n    };\n  });\n};\nexport const getYourBlogs = userId => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/your-blogs?userId=\").concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR GET YOUR BLOGS\"\n    };\n  });\n};\nexport const getSingleBlog = id => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/\").concat(id), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR GET SINGLE BLOG\"\n    };\n  });\n};\nexport const getSingleBlogToEdit = (id, uid) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/edit/\").concat(id, \"?uid=\").concat(uid), {\n    method: \"GET\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\"\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    return {\n      message: \"ERROR GET SINGLE BLOG TO EDIT\"\n    };\n  });\n};\nexport const putEditBlog = (blogInfo, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/edit/\").concat(blogInfo.id), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify(blogInfo)\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR POST ANNOUNCEMENT\");\n  });\n};\nexport const deleteBlog = (bid, token) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/blogs/delete/\").concat(bid), {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"Application/json\",\n      \"Content-Type\": \"Application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(res => {\n    return res.json();\n  }).catch(err => {\n    console.log(\"ERROR DELETE ANNOUNCEMENT\");\n  });\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/controllers/blogController.js"],"names":["postWriteBlog","blogInfo","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","message","getBlogs","number","getAllBlogs","getYourBlogs","userId","getSingleBlog","id","getSingleBlogToEdit","uid","putEditBlog","console","log","deleteBlog","bid"],"mappings":"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","sourcesContent":["\nexport const postWriteBlog = (blogInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/write`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(blogInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR POST WRITE BLOG\"}\n    });\n}\n\nexport const getBlogs = (number = 5) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs?limit=${number}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET BLOGS\"}\n    })\n}\n\nexport const getAllBlogs = () => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/all`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET ALL BLOGS\"}\n    })\n}\n\nexport const getYourBlogs = (userId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/your-blogs?userId=${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET YOUR BLOGS\"}\n    })\n}\n\n\nexport const getSingleBlog = (id) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/${id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE BLOG\"}\n    })\n}\n\nexport const getSingleBlogToEdit =(id, uid) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/edit/${id}?uid=${uid}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE BLOG TO EDIT\"}\n    })\n}\n\nexport const putEditBlog = (blogInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/edit/${blogInfo.id}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(blogInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR POST ANNOUNCEMENT\");\n    })\n}\n\nexport const deleteBlog = (bid, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/blogs/delete/${bid}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        console.log(\"ERROR DELETE ANNOUNCEMENT\");\n    })\n}"]},"metadata":{},"sourceType":"module"}
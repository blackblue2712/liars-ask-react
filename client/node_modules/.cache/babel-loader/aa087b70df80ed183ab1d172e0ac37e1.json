{"ast":null,"code":"import _slicedToArray from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import SidebarWidgetItem from'./SidebarWidgetItem';import{getBlogs}from'../../controllers/blogController';var SidebarWidget=function SidebarWidget(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),blogs=_useState2[0],setBlogs=_useState2[1];useEffect(function(){getBlogs().then(function(res){setBlogs(res);});},[blogs.length]);return React.createElement(React.Fragment,null,blogs.map(function(blog,i){return React.createElement(SidebarWidgetItem,{key:i,classIcon:\"\",widgetContent:blog.title,id:blog._id});}));};export default SidebarWidget;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/components/SidebarWidget.js"],"names":["React","useState","useEffect","SidebarWidgetItem","getBlogs","SidebarWidget","props","blogs","setBlogs","then","res","length","map","blog","i","title","_id"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,OAASC,QAAT,KAAyB,kCAAzB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,KAAK,CAAI,eACHL,QAAQ,CAAC,EAAD,CADL,wCACtBM,KADsB,eACfC,QADe,eAG3BN,SAAS,CAAE,UAAM,CACbE,QAAQ,GACPK,IADD,CACO,SAAAC,GAAG,CAAI,CACVF,QAAQ,CAACE,GAAD,CAAR,CACH,CAHD,EAIH,CALQ,CAKN,CAACH,KAAK,CAACI,MAAP,CALM,CAAT,CAOA,MACI,yCAEQJ,KAAK,CAACK,GAAN,CAAW,SAACC,IAAD,CAAOC,CAAP,CAAa,CACpB,MAAO,qBAAC,iBAAD,EACH,GAAG,CAAEA,CADF,CAEH,SAAS,CAAC,EAFP,CAGH,aAAa,CAAED,IAAI,CAACE,KAHjB,CAIH,EAAE,CAAEF,IAAI,CAACG,GAJN,EAAP,CAMH,CAPD,CAFR,CADJ,CAkBH,CA5BD,CA8BA,cAAeX,CAAAA,aAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport SidebarWidgetItem from './SidebarWidgetItem';\nimport { getBlogs } from '../../controllers/blogController';\n\nconst SidebarWidget = props => {\n    let [blogs, setBlogs] = useState([]);\n\n    useEffect( () => {\n        getBlogs()\n        .then( res => {\n            setBlogs(res);\n        })\n    }, [blogs.length]);\n\n    return (\n        <>\n            {\n                blogs.map( (blog, i) => {\n                    return <SidebarWidgetItem\n                        key={i}\n                        classIcon=\"\"\n                        widgetContent={blog.title}\n                        id={blog._id}\n                    />\n                })\n            }\n            \n            {/*<SidebarWidgetItem classIcon=\"fav-liarsflow\"\n                widgetContent=\"2020 Developer Survey: any topic suggestions?\"\n            /> */}\n        </>\n    )\n}\n\nexport default SidebarWidget;"]},"metadata":{},"sourceType":"module"}
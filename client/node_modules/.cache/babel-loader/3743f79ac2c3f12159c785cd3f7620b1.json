{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/questions/ListItem.js\";\nimport React, { Component } from 'react';\nimport Tags from '../components/Tags';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass ListItem extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps != this.props;\n  }\n\n  render() {\n    const _this$props = this.props,\n          title = _this$props.title,\n          body = _this$props.body,\n          tags = _this$props.tags,\n          id = _this$props.id;\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"item-list narrow d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"cp d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mini-counts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"0 votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"0\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"votes\")), React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mini-counts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"0 votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"0\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"answers\")), React.createElement(\"div\", {\n      className: \"views\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mini-counts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      title: \"0 votes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"0\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"views\"))), React.createElement(\"div\", {\n      className: \"list-sumary w-100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/questions/ask/\".concat(id),\n      className: \"hyper-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: \"list-body--text mb4\",\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, body.length > 200 ? body.slice(0, 200) + \"...\" : body), tags && tags.map((t, i) => {\n      return React.createElement(Tags, {\n        key: i,\n        name: t,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      className: \"clear-fix\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ListItem;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/client/questions/ListItem.js"],"names":["React","Component","Tags","ReactMarkdown","Link","ListItem","shouldComponentUpdate","nextProps","nextState","props","render","title","body","tags","id","console","log","length","slice","map","t","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Tags from '../components/Tags';\nimport ReactMarkdown from 'react-markdown';\nimport { Link } from 'react-router-dom';\n\nclass ListItem extends Component {\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps != this.props;\n    }\n\n    render() {\n        const { title, body, tags, id } = this.props;\n        console.log(this.props)\n        return (\n            <div className={`item-list narrow d-flex`}>\n                <div className=\"cp d-flex\">\n                    <div className=\"votes\">\n                        <div className=\"mini-counts\">\n                            <span title=\"0 votes\">0</span>\n                        </div>\n                        <div>votes</div>\n                    </div>\n                    <div className=\"status\">\n                        <div className=\"mini-counts\">\n                            <span title=\"0 votes\">0</span>\n                        </div>\n                        <div>answers</div>\n                    </div>\n                    <div className=\"views\">\n                        <div className=\"mini-counts\">\n                            <span title=\"0 votes\">0</span>\n                        </div>\n                        <div>views</div>\n                    </div>\n                </div>\n                <div className=\"list-sumary w-100\">\n                    <h3>\n                        <Link to={`/questions/ask/${id}`} className=\"hyper-link\">{title}</Link>\n                    </h3>\n                    <div className=\"list-body--text mb4\" style={{}}>\n                        {/* <ReactMarkdown\n                            source={body.length > 100 ? body.slice(0, 100) + \"...\" : body}\n                        /> */}\n                        {body.length > 200 ? body.slice(0, 200) + \"...\" : body}\n                    </div>\n                    {\n                        tags && tags.map( (t, i) => {\n                            return <Tags key={i} name={t}/>\n                        })\n                    }\n                    {/* <div className=\"started ml-auto\" dir=\"ltr\">\n                        <a href=\"#relativetime\">asked 44 min ago</a>\n                    </div> */}\n                    <div className=\"clear-fix\"></div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListItem;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/components/Header/NotifyDropdown/NotifyDropdown.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport dfimg from '../../../../images/solar-system.png';\nimport { isAuthenticated } from '../../../../controllers/userController';\nimport { getNotifications } from \"../../../../controllers/notifyController\";\n\nconst NotifyDropDown = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notifications = _useState2[0],\n        setNotifications = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        open = _useState4[0],\n        setOpen = _useState4[1];\n\n  useEffect(() => {\n    getNotifications(isAuthenticated().user._id, isAuthenticated().token).then(res => {\n      if (res) setNotifications(res);\n    }).catch(console.log);\n    return () => {\n      document.getElementById('root').removeEventListener('click', closeDropdown);\n    };\n  }, []);\n\n  const closeDropdown = () => {\n    setTimeout(() => {\n      document.querySelector(\".list-notify-box\").style.display = \"none\";\n      document.getElementById('root').removeEventListener('click', closeDropdown);\n      setOpen(false);\n    }, 0);\n  };\n\n  const handleToggleNotify = () => {\n    if (!open) {\n      document.querySelector(\".list-notify-box\").style.display = \"block\";\n      document.getElementById('root').addEventListener('click', closeDropdown);\n      setOpen(true);\n    } else {\n      document.querySelector(\".list-notify-box\").style.display = \"none\";\n      setOpen(false);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    class: \"notification-box\",\n    onClick: handleToggleNotify,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"notification-count\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, notifications.length), React.createElement(\"div\", {\n    class: \"notification-bell\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"bell-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"bell-middle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"bell-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    class: \"bell-rad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"list-notify-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, notifications.length > 0 ? notifications.map((ntf, i) => {\n    return React.createElement(\"li\", {\n      className: \"item-notify\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"w-100 content-notify-item \",\n      to: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        float: \"left\",\n        marginRight: \"10px\"\n      },\n      className: \"bd50\",\n      width: \"50\",\n      height: \"50\",\n      src: ntf.photo || dfimg,\n      alt: \"avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, ntf.content.length > 100 ? ntf.content.substr(0, 100) : ntf.content, \" ...\")));\n  }) : React.createElement(\"span\", {\n    style: {\n      padding: \"0 16px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"No notification\"))));\n};\n\nexport default NotifyDropDown;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/components/Header/NotifyDropdown/NotifyDropdown.js"],"names":["React","useState","useEffect","Link","dfimg","isAuthenticated","getNotifications","NotifyDropDown","props","notifications","setNotifications","open","setOpen","user","_id","token","then","res","catch","console","log","document","getElementById","removeEventListener","closeDropdown","setTimeout","querySelector","style","display","handleToggleNotify","addEventListener","length","map","ntf","i","float","marginRight","photo","content","substr","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport dfimg from '../../../../images/solar-system.png';\nimport { isAuthenticated } from '../../../../controllers/userController';\nimport { getNotifications } from \"../../../../controllers/notifyController\";\n\nconst NotifyDropDown = props => {\n    const [notifications, setNotifications] = useState([]);\n    const [open, setOpen] = useState(false);\n\n    useEffect(() => {\n        getNotifications(isAuthenticated().user._id, isAuthenticated().token)\n            .then(res => {\n                if(res) setNotifications(res)\n            })\n            .catch(console.log)\n\n        return () => {\n            document.getElementById('root').removeEventListener('click', closeDropdown);\n        }\n\n    }, [])\n\n    const closeDropdown = () => {\n        setTimeout(() => {\n            document.querySelector(\".list-notify-box\").style.display = \"none\";\n            document.getElementById('root').removeEventListener('click', closeDropdown);\n            setOpen(false);\n        }, 0)\n    }\n\n    const handleToggleNotify = () => {\n        if(!open) {\n            document.querySelector(\".list-notify-box\").style.display = \"block\";\n            document.getElementById('root').addEventListener('click', closeDropdown);\n            setOpen(true);\n        } else {\n            document.querySelector(\".list-notify-box\").style.display = \"none\";\n            setOpen(false);\n        }\n    }\n\n    return (\n        <div class=\"notification-box\" onClick={handleToggleNotify}>\n            <span class=\"notification-count\">{notifications.length}</span>\n            <div class=\"notification-bell\">\n                <span class=\"bell-top\"></span>\n                <span class=\"bell-middle\"></span>\n                <span class=\"bell-bottom\"></span>\n                <span class=\"bell-rad\"></span>\n            </div>\n            <div className=\"list-notify-box\">\n                <ul className=\"\">\n                    {\n                        notifications.length > 0 ? notifications.map((ntf, i) => {\n                            return <li className=\"item-notify\">\n                                <Link className=\"w-100 content-notify-item \" to=\"/#\">\n                                    <img style={{ float: \"left\", marginRight: \"10px\" }} className=\"bd50\" width=\"50\" height=\"50\" src={ntf.photo || dfimg} alt=\"avatar\" />\n                                    <span>\n                                        {ntf.content.length > 100 ? ntf.content.substr(0, 100) : ntf.content} ...\n                                                                </span>\n                                </Link>\n                            </li>\n                        }) : <span style={{ padding: \"0 16px\" }}>No notification</span>\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default NotifyDropDown;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from\"/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import ListItem from'./ListItem';import Skeleton from'../components/Skeleton';var ListWrapper=function ListWrapper(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),blogs=_useState2[0],setBlogs=_useState2[1];useEffect(function(){setBlogs(props.data);});if(!props.data){return React.createElement(Skeleton,null);}else{return React.createElement(\"div\",{id:\"list-wrapper\"},React.createElement(\"div\",{className:\"mini-list\"},blogs&&blogs.map(function(blog,i){return React.createElement(ListItem,{key:i,title:blog.title,body:blog.body,tags:blog.tags,id:blog._id});})));}};export default ListWrapper;","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/Project-NL/liars-ask-react-deploy/client/src/client/blogs/ListWrapper.js"],"names":["React","useState","useEffect","ListItem","Skeleton","ListWrapper","props","blogs","setBlogs","data","map","blog","i","title","body","tags","_id"],"mappings":"uLAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,eACCL,QAAQ,CAAC,EAAD,CADT,wCAClBM,KADkB,eACXC,QADW,eAGzBN,SAAS,CAAE,UAAM,CACbM,QAAQ,CAACF,KAAK,CAACG,IAAP,CAAR,CACH,CAFQ,CAAT,CAIA,GAAG,CAACH,KAAK,CAACG,IAAV,CAAgB,CACZ,MAAO,qBAAC,QAAD,MAAP,CACH,CAFD,IAEO,CACH,MACI,4BAAK,EAAE,CAAC,cAAR,EACI,2BAAK,SAAS,CAAC,WAAf,EAEQF,KAAK,EAAIA,KAAK,CAACG,GAAN,CAAW,SAACC,IAAD,CAAOC,CAAP,CAAa,CAC7B,MAAO,qBAAC,QAAD,EAAU,GAAG,CAAEA,CAAf,CAAkB,KAAK,CAAED,IAAI,CAACE,KAA9B,CAAqC,IAAI,CAAEF,IAAI,CAACG,IAAhD,CAAsD,IAAI,CAAEH,IAAI,CAACI,IAAjE,CAAuE,EAAE,CAAEJ,IAAI,CAACK,GAAhF,EAAP,CACH,CAFQ,CAFjB,CADJ,CADJ,CAWH,CACJ,CAtBD,CAwBA,cAAeX,CAAAA,WAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ListItem from './ListItem';\nimport Skeleton from '../components/Skeleton';\n\nconst ListWrapper = props => {\n    const [blogs, setBlogs] = useState([]);\n\n    useEffect( () => {\n        setBlogs(props.data);\n    })\n\n    if(!props.data) {\n        return <Skeleton />\n    } else {\n        return (\n            <div id=\"list-wrapper\">\n                <div className=\"mini-list\">\n                    {\n                        blogs && blogs.map( (blog, i) => {\n                            return <ListItem key={i} title={blog.title} body={blog.body} tags={blog.tags} id={blog._id} /> \n                        })\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListWrapper;"]},"metadata":{},"sourceType":"module"}
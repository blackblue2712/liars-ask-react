{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/Study_space/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/opt/lampp/htdocs/Study_space/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  useEffect(async () => {\n    let check = await isAdmin(isAuthenticated().token);\n  });\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => React.createElement(Component, Object.assign({}, props, {\n      userPayload: isAuthenticated(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js"],"names":["React","useState","useEffect","Route","Redirect","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","component","rest","open","setOpen","check","token","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,iBAAiB,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAAA,oBAErCT,QAAQ,CAAC,KAAD,CAF6B;AAAA;AAAA,QAEtDU,IAFsD;AAAA,QAEhDC,OAFgD;;AAI7DV,EAAAA,SAAS,CAAE,YAAY;AACnB,QAAIW,KAAK,GAAG,MAAMP,OAAO,CAACD,eAAe,GAAGS,KAAnB,CAAzB;AACH,GAFQ,CAAT;AAIA,SACI,oBAAC,KAAD,oBACQJ,IADR;AAEI,IAAA,MAAM,EAAGK,KAAK,IAEN,oBAAC,SAAD,oBAAeA,KAAf;AAAsB,MAAA,WAAW,EAAEV,eAAe,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAUH,CAlBD;;AAoBA,eAAeE,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n    \n    const [open, setOpen] = useState(false);\n\n    useEffect( async () => {\n        let check = await isAdmin(isAuthenticated().token);\n    })\n\n    return (\n        <Route\n            {...rest}\n            render={ props =>\n                (\n                    <Component {...props} userPayload={isAuthenticated()} />\n                )\n            }\n        />\n    );\n}\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/admin/PrivateRouteAdmin.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  useEffect(() => {\n    async function fetchData() {\n      let check = await isAdmin(isAuthenticated().token);\n\n      if (check.message === \"admin\") {\n        setOpen(true);\n      } else if (check.message === \"Permission deny\") {\n        window.location = \"/404\";\n      }\n    }\n\n    fetchData();\n  }, []);\n  return open === true ? React.createElement(Route, Object.assign({}, rest, {\n    render: props => React.createElement(Component, Object.assign({}, props, {\n      userPayload: isAuthenticated(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  });\n};\n\nexport default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/STUDY_SPACE/liars-ask-react/src/admin/PrivateRouteAdmin.js"],"names":["React","useState","useEffect","Route","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","component","rest","open","setOpen","fetchData","check","token","message","window","location","props"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,iBAAiB,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAAA,oBAErCR,QAAQ,CAAC,KAAD,CAF6B;AAAA;AAAA,QAEtDS,IAFsD;AAAA,QAEhDC,OAFgD;;AAI7DT,EAAAA,SAAS,CAAE,MAAM;AACb,mBAAeU,SAAf,GAA4B;AACxB,UAAIC,KAAK,GAAG,MAAMR,OAAO,CAACD,eAAe,GAAGU,KAAnB,CAAzB;;AACA,UAAGD,KAAK,CAACE,OAAN,KAAkB,OAArB,EAA8B;AAC1BJ,QAAAA,OAAO,CAAC,IAAD,CAAP;AACH,OAFD,MAEO,IAAGE,KAAK,CAACE,OAAN,KAAkB,iBAArB,EAAwC;AAC3CC,QAAAA,MAAM,CAACC,QAAP,GAAkB,MAAlB;AACH;AACJ;;AACDL,IAAAA,SAAS;AAGZ,GAZQ,EAYN,EAZM,CAAT;AAcA,SACIF,IAAI,KAAK,IAAT,GACA,oBAAC,KAAD,oBACQD,IADR;AAEI,IAAA,MAAM,EAAGS,KAAK,IAEN,oBAAC,SAAD,oBAAeA,KAAf;AAAsB,MAAA,WAAW,EAAEd,eAAe,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADA,GASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVN;AAYH,CA9BD;;AAgCA,eAAeE,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { Route } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = ({ component: Component, ...rest }) => {\n    \n    const [open, setOpen] = useState(false);\n\n    useEffect( () => {\n        async function fetchData () {\n            let check = await isAdmin(isAuthenticated().token);\n            if(check.message === \"admin\") {\n                setOpen(true);\n            } else if(check.message === \"Permission deny\") {\n                window.location = \"/404\";\n            }\n        }\n        fetchData();\n        \n\n    }, [])\n\n    return (\n        open === true ? \n        <Route\n            {...rest}\n            render={ props =>\n                (\n                    <Component {...props} userPayload={isAuthenticated()} />\n                )\n            }\n        />\n        : <div></div>\n    );\n}\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}
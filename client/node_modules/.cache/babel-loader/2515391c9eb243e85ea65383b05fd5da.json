{"ast":null,"code":"export var postAsk=function postAsk(askInfo,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/new\"),{method:\"POST\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(askInfo)}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR POST ASK\"};});};export var getQuestions=function getQuestions(){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/questions\"),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET QUESTIONS\"};});};export var getSingleQuestion=function getSingleQuestion(id){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/questions/\").concat(id),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET SINGLE QUESTION\"};});};export var getSingleQuestionToEdit=function getSingleQuestionToEdit(id,uid){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/questions/edit/\").concat(id,\"?uid=\").concat(uid),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET SINGLE QUESTION TO EDIT\"};});};export var getYourQuestions=function getYourQuestions(userId){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/your-questions?userId=\").concat(String(userId)),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET YOUR QUESTIONS \"+err};});};export var postAnswer=function postAnswer(answerInfo,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/answer/new\"),{method:\"POST\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(answerInfo)}).then(function(res){return res.json();}).catch(function(error){return{message:\"ERROR POST ANSWER\"};});};export var getAnswers=function getAnswers(quesId){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/answers/\").concat(quesId),{method:\"GET\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\"}}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR GET ANSWERS\"};});};export var putEditQuestion=function putEditQuestion(quesInfo,token){return fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/asks/questions/edit/\").concat(quesInfo.id),{method:\"PUT\",headers:{Accept:\"Application/json\",\"Content-Type\":\"Application/json\",Authorization:\"Bearer \".concat(token)},body:JSON.stringify(quesInfo)}).then(function(res){return res.json();}).catch(function(err){return{message:\"ERROR PUT UPDATE\"};});};","map":{"version":3,"sources":["/opt/lampp/htdocs/Cloud/liars-ask-react-deploy/src/controllers/askController.js"],"names":["postAsk","askInfo","token","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","JSON","stringify","then","res","json","catch","err","message","getQuestions","getSingleQuestion","id","getSingleQuestionToEdit","uid","getYourQuestions","userId","String","postAnswer","answerInfo","error","getAnswers","quesId","putEditQuestion","quesInfo"],"mappings":"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","sourcesContent":["\nexport const postAsk = (askInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/new`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(askInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR POST ASK\"}\n    });\n}\n\nexport const getQuestions = () => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/questions`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET QUESTIONS\"}\n    });\n}\n\nexport const getSingleQuestion = (id) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/questions/${id}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE QUESTION\"}\n    });\n}\n\nexport const getSingleQuestionToEdit = (id, uid) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/questions/edit/${id}?uid=${uid}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET SINGLE QUESTION TO EDIT\"}\n    });\n}\n\nexport const getYourQuestions = (userId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/your-questions?userId=${String(userId)}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET YOUR QUESTIONS \" + err}\n    });\n}\n\n\n\nexport const postAnswer = (answerInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/answer/new`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(answerInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( error => {\n        return {message: \"ERROR POST ANSWER\"}\n    });\n}\n\nexport const getAnswers = (quesId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/answers/${quesId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\"\n        },\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR GET ANSWERS\"}\n    });\n}\n\nexport const putEditQuestion = (quesInfo, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/asks/questions/edit/${quesInfo.id}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"Application/json\",\n            \"Content-Type\": \"Application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(quesInfo)\n    })\n    .then( res => {\n        return res.json();\n    })\n    .catch( err => {\n        return {message: \"ERROR PUT UPDATE\"}\n    });\n}"]},"metadata":{},"sourceType":"module"}
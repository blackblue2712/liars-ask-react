{"ast":null,"code":"import _objectWithoutProperties from \"/opt/lampp/htdocs/Study_space/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = async (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  let check = await isAdmin(isAuthenticated().token);\n\n  if (check === \"admin\") {\n    return React.createElement(Route, Object.assign({}, rest, {\n      render: async props => isAuthenticated() && check === \"admin\" ? React.createElement(Component, Object.assign({}, props, {\n        userPayload: isAuthenticated(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/auth\",\n          state: {\n            from: props.location\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }));\n  } else {\n    console.log(\"else\");\n  }\n};\n\nexport default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js"],"names":["React","Route","Redirect","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","component","rest","check","token","props","pathname","state","from","location","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,iBAAiB,GAAG,gBAA6C;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACnE,MAAIC,KAAK,GAAG,MAAML,OAAO,CAACD,eAAe,GAAGO,KAAnB,CAAzB;;AACA,MAAGD,KAAK,KAAK,OAAb,EAAsB;AAClB,WACI,oBAAC,KAAD,oBACQD,IADR;AAEI,MAAA,MAAM,EAAG,MAAMG,KAAN,IACLR,eAAe,MAAMM,KAAK,KAAM,OAAhC,GACI,oBAAC,SAAD,oBAAeE,KAAf;AAAsB,QAAA,WAAW,EAAER,eAAe,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,GAGQ,oBAAC,QAAD;AACI,QAAA,EAAE,EAAE;AACAS,UAAAA,QAAQ,EAAE,OADV;AAEAC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFP,SADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAiBH,GAlBD,MAkBO;AACHC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;AACJ,CAvBD;;AAyBA,eAAeZ,iBAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = async ({ component: Component, ...rest }) => {\n    let check = await isAdmin(isAuthenticated().token);\n    if(check === \"admin\") {\n        return (\n            <Route\n                {...rest}\n                render={ async props =>\n                    isAuthenticated() && check ===  \"admin\" ? (\n                        <Component {...props} userPayload={isAuthenticated()} />\n                    ) : (\n                            <Redirect\n                                to={{\n                                    pathname: \"/auth\",\n                                    state: { from: props.location }\n                                }}\n                            />\n                        )\n                }\n            />\n        );\n    } else {\n        console.log(\"else\")\n    }\n}\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}
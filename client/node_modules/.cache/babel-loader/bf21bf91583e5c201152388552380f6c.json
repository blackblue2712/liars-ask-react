{"ast":null,"code":"import _objectWithoutProperties from \"/opt/lampp/htdocs/Study_space/liars-ask-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = async (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  alert(isAdmin(isAuthenticated().token).then(res => res));\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: async props => isAuthenticated() && (await isAdmin(isAuthenticated().token)) === \"admin\" ? React.createElement(Component, Object.assign({}, props, {\n      userPayload: isAuthenticated(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: \"/auth\",\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default PrivateRouteAdmin;","map":{"version":3,"sources":["/opt/lampp/htdocs/Study_space/liars-ask-react/src/admin/PrivateRouteAdmin.js"],"names":["React","Route","Redirect","isAuthenticated","isAdmin","PrivateRouteAdmin","Component","component","rest","alert","token","then","res","props","pathname","state","from","location"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,iBAAiB,GAAG,gBAA6C;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AACnEC,EAAAA,KAAK,CAACL,OAAO,CAACD,eAAe,GAAGO,KAAnB,CAAP,CAAiCC,IAAjC,CAAsCC,GAAG,IAAIA,GAA7C,CAAD,CAAL;AACA,SACI,oBAAC,KAAD,oBACQJ,IADR;AAEI,IAAA,MAAM,EAAG,MAAMK,KAAN,IACLV,eAAe,MAAM,OAAMC,OAAO,CAACD,eAAe,GAAGO,KAAnB,CAAb,MAA4C,OAAjE,GACI,oBAAC,SAAD,oBAAeG,KAAf;AAAsB,MAAA,WAAW,EAAEV,eAAe,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,GAGQ,oBAAC,QAAD;AACI,MAAA,EAAE,EAAE;AACAW,QAAAA,QAAQ,EAAE,OADV;AAEAC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd;AAFP,OADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAiBH,CAnBD;;AAqBA,eAAeZ,iBAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { isAuthenticated } from '../controllers/userController';\nimport { isAdmin } from '../controllers/authController';\n\nconst PrivateRouteAdmin = async ({ component: Component, ...rest }) => {\n    alert(isAdmin(isAuthenticated().token).then(res => res))\n    return (\n        <Route\n            {...rest}\n            render={ async props =>\n                isAuthenticated() && await isAdmin(isAuthenticated().token) ===  \"admin\" ? (\n                    <Component {...props} userPayload={isAuthenticated()} />\n                ) : (\n                        <Redirect\n                            to={{\n                                pathname: \"/auth\",\n                                state: { from: props.location }\n                            }}\n                        />\n                    )\n            }\n        />\n    );\n}\n\nexport default PrivateRouteAdmin;"]},"metadata":{},"sourceType":"module"}